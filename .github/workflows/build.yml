name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "linux debug g++",
            os: ubuntu-latest,
            build_type: "DEBUG",
            cxx: "g++-12",
            std: 20,
            benchmarks: "OFF",
            generators: "Ninja"
          }
        - {
            name: "linux release g++",
            os: ubuntu-latest,
            build_type: "RELEASE",
            cxx: "g++-12",
            std: 20,
            benchmarks: "ON",
            generators: "Ninja"
          }
        - {
            name: "linux debug clang++",
            os: ubuntu-latest,
            build_type: "DEBUG",
            cxx: "clang++-15",
            std: 20,
            benchmarks: "OFF",
            generators: "Ninja"
          }
        - {
            name: "linux release clang++",
            os: ubuntu-latest,
            build_type: "RELEASE",
            cxx: "clang++-15",
            std: 20,
            benchmarks: "ON",
            generators: "Ninja"
          }

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake g++-12 clang++-15 libboost1.83-dev
          ninja --version
          cmake --version
          g++ --version
          clang++ --version

      - name: configure
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} \
            -DCMAKE_CXX_STANDARD=${{ matrix.config.std }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DMPH_BUILD_BENCHMARKS=${{ matrix.config.benchmarks }} \
            -G "${{ matrix.config.generators }}"

      - name: build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: test
        shell: bash
        run: ctest --output-on-failure .
