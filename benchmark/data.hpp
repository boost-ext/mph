//
// Copyright (c) 2024 Kris Jusiak (kris at jusiak dot net)
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
#pragma once

#include <array>
#include <string_view>

namespace data::inline v_1_0_0 {
// clang-format off
inline constexpr std::array random_5_len_4{
  std::array{'F', 'X', 'B', ' ',},
  std::array{'C', 'O', 'D', 'I',},
  std::array{'D', 'D', 'M', 'X',},
  std::array{'M', 'O', 'H', 'O',},
  std::array{'S', 'P', 'C', 'B',},
};

inline constexpr std::array random_5_len_8{
  std::array{'F', 'X', 'B', ' ', ' ', ' ', ' ', ' ',},
  std::array{'C', 'O', 'D', 'I', ' ', ' ', ' ', ' ',},
  std::array{'D', 'D', 'M', 'X', ' ', ' ', ' ', ' ',},
  std::array{'M', 'O', 'H', 'O', ' ', ' ', ' ', ' ',},
  std::array{'S', 'P', 'C', 'B', ' ', ' ', ' ', ' ',},
};

inline constexpr std::array random_6_len_3_5{
  std::string_view{"ftp"},
  std::string_view{"file"},
  std::string_view{"http"},
  std::string_view{"https"},
  std::string_view{"ws"},
  std::string_view{"wss"}
};

inline constexpr std::array random_100_len_8{
  std::array{'I','I','I',' ',' ',' ',' ',' ',},
  std::array{'A','G','M','-','C',' ',' ',' ',},
  std::array{'L','O','P','E',' ',' ',' ',' ',},
  std::array{'F','E','M','S',' ',' ',' ',' ',},
  std::array{'I','E','A',' ',' ',' ',' ',' ',},
  std::array{'V','Y','M','I',' ',' ',' ',' ',},
  std::array{'B','H','K',' ',' ',' ',' ',' ',},
  std::array{'S','I','E','B',' ',' ',' ',' ',},
  std::array{'D','G','B','P',' ',' ',' ',' ',},
  std::array{'I','N','F','N',' ',' ',' ',' ',},
  std::array{'U','S','R','T',' ',' ',' ',' ',},
  std::array{'B','C','O','R',' ',' ',' ',' ',},
  std::array{'T','W','M',' ',' ',' ',' ',' ',},
  std::array{'B','V','S','N',' ',' ',' ',' ',},
  std::array{'S','T','B','A',' ',' ',' ',' ',},
  std::array{'G','P','K',' ',' ',' ',' ',' ',},
  std::array{'L','V','H','D',' ',' ',' ',' ',},
  std::array{'F','T','E','K',' ',' ',' ',' ',},
  std::array{'G','L','B','S',' ',' ',' ',' ',},
  std::array{'C','U','B','B',' ',' ',' ',' ',},
  std::array{'L','R','C','X',' ',' ',' ',' ',},
  std::array{'H','T','G','M',' ',' ',' ',' ',},
  std::array{'R','Y','N',' ',' ',' ',' ',' ',},
  std::array{'I','P','G',' ',' ',' ',' ',' ',},
  std::array{'P','N','N','T','G',' ',' ',' ',},
  std::array{'Z','I','G',' ',' ',' ',' ',' ',},
  std::array{'I','V','R','-','A',' ',' ',' ',},
  std::array{'I','N','V','A',' ',' ',' ',' ',},
  std::array{'M','N','E',' ',' ',' ',' ',' ',},
  std::array{'K','R','A',' ',' ',' ',' ',' ',},
  std::array{'B','R','M','K',' ',' ',' ',' ',},
  std::array{'A','R','K','G',' ',' ',' ',' ',},
  std::array{'F','F','R',' ',' ',' ',' ',' ',},
  std::array{'Q','T','R','X',' ',' ',' ',' ',},
  std::array{'X','T','N',' ',' ',' ',' ',' ',},
  std::array{'B','A','C','-','A',' ',' ',' ',},
  std::array{'C','Y','B','E',' ',' ',' ',' ',},
  std::array{'E','T','J',' ',' ',' ',' ',' ',},
  std::array{'J','H','C','S',' ',' ',' ',' ',},
  std::array{'R','B','C','A','A',' ',' ',' ',},
  std::array{'G','D','S',' ',' ',' ',' ',' ',},
  std::array{'W','T','I','D',' ',' ',' ',' ',},
  std::array{'T','C','O',' ',' ',' ',' ',' ',},
  std::array{'B','W','A',' ',' ',' ',' ',' ',},
  std::array{'M','I','E',' ',' ',' ',' ',' ',},
  std::array{'G','E','N','Y',' ',' ',' ',' ',},
  std::array{'T','D','O','C',' ',' ',' ',' ',},
  std::array{'M','C','R','O',' ',' ',' ',' ',},
  std::array{'Q','F','I','N',' ',' ',' ',' ',},
  std::array{'N','B','T','B',' ',' ',' ',' ',},
  std::array{'P','W','C',' ',' ',' ',' ',' ',},
  std::array{'F','Q','A','L',' ',' ',' ',' ',},
  std::array{'N','J','A','N',' ',' ',' ',' ',},
  std::array{'I','W','B',' ',' ',' ',' ',' ',},
  std::array{'G','X','G','X','W',' ',' ',' ',},
  std::array{'E','D','U','C',' ',' ',' ',' ',},
  std::array{'R','E','T','L',' ',' ',' ',' ',},
  std::array{'V','I','A','C','A',' ',' ',' ',},
  std::array{'K','L','D','O',' ',' ',' ',' ',},
  std::array{'N','E','E','-','I',' ',' ',' ',},
  std::array{'F','B','C',' ',' ',' ',' ',' ',},
  std::array{'J','W','.','A',' ',' ',' ',' ',},
  std::array{'B','S','M','X',' ',' ',' ',' ',},
  std::array{'F','M','N','B',' ',' ',' ',' ',},
  std::array{'E','X','R',' ',' ',' ',' ',' ',},
  std::array{'T','A','C',' ',' ',' ',' ',' ',},
  std::array{'F','D','L',' ',' ',' ',' ',' ',},
  std::array{'S','W','I','R',' ',' ',' ',' ',},
  std::array{'C','L','W','T',' ',' ',' ',' ',},
  std::array{'L','M','H','B',' ',' ',' ',' ',},
  std::array{'I','R','T','C',' ',' ',' ',' ',},
  std::array{'C','D','M','O',' ',' ',' ',' ',},
  std::array{'H','M','L','P','-','A',' ',' ',},
  std::array{'L','V','U','S',' ',' ',' ',' ',},
  std::array{'U','M','R','X',' ',' ',' ',' ',},
  std::array{'G','J','H',' ',' ',' ',' ',' ',},
  std::array{'F','R','M','E',' ',' ',' ',' ',},
  std::array{'C','E','I','X',' ',' ',' ',' ',},
  std::array{'I','H','D',' ',' ',' ',' ',' ',},
  std::array{'G','H','S','I',' ',' ',' ',' ',},
  std::array{'D','C','P','-','B',' ',' ',' ',},
  std::array{'S','B',' ',' ',' ',' ',' ',' ',},
  std::array{'D','S','E',' ',' ',' ',' ',' ',},
  std::array{'C','P','R','T',' ',' ',' ',' ',},
  std::array{'N','R','Z',' ',' ',' ',' ',' ',},
  std::array{'V','L','Y','P','O',' ',' ',' ',},
  std::array{'T','D','A','C',' ',' ',' ',' ',},
  std::array{'Z','X','Z','Z','T',' ',' ',' ',},
  std::array{'I','W','X',' ',' ',' ',' ',' ',},
  std::array{'N','C','S','M',' ',' ',' ',' ',},
  std::array{'W','I','R','E',' ',' ',' ',' ',},
  std::array{'S','F','S','T',' ',' ',' ',' ',},
  std::array{'E','W','D',' ',' ',' ',' ',' ',},
  std::array{'D','E','A','C','W',' ',' ',' ',},
  std::array{'T','R','P','X',' ',' ',' ',' ',},
  std::array{'U','C','T','T',' ',' ',' ',' ',},
  std::array{'Z','A','Z','Z','T',' ',' ',' ',},
  std::array{'C','Y','D',' ',' ',' ',' ',' ',},
  std::array{'N','U','R','E',' ',' ',' ',' ',},
  std::array{'W','E','A','T',' ',' ',' ',' ',},
};

inline constexpr std::array random_100_len_1_8{
  std::string_view{"apple"},
  std::string_view{"Autumn"},
  std::string_view{"Basket"},
  std::string_view{"Beach"},
  std::string_view{"Beacon"},
  std::string_view{"Beauty"},
  std::string_view{"Book"},
  std::string_view{"Breeze"},
  std::string_view{"Bridge"},
  std::string_view{"Bubble"},
  std::string_view{"Candle"},
  std::string_view{"phone"},
  std::string_view{"1"},
  std::string_view{"1234"},
  std::string_view{"12345678"},
  std::string_view{"98765432"},
  std::string_view{"11111111"},
  std::string_view{"zzzzzzz"},
  std::string_view{"cascade"},
  std::string_view{"Cat"},
  std::string_view{"Child"},
  std::string_view{"Cloud"},
  std::string_view{"Coffee"},
  std::string_view{"Color"},
  std::string_view{"Comet"},
  std::string_view{"Cuddle"},
  std::string_view{"Dance"},
  std::string_view{"Dog"},
  std::string_view{"Dream"},
  std::string_view{"Earth"},
  std::string_view{"Echo"},
  std::string_view{"Elusive"},
  std::string_view{"Enchant"},
  std::string_view{"Ethereal"},
  std::string_view{"Feather"},
  std::string_view{"Flight"},
  std::string_view{"Flower"},
  std::string_view{"Forest"},
  std::string_view{"Fruit"},
  std::string_view{"Galaxy"},
  std::string_view{"Glisten"},
  std::string_view{"Glitter"},
  std::string_view{"Guitar"},
  std::string_view{"Happy"},
  std::string_view{"Harmony"},
  std::string_view{"Journey"},
  std::string_view{"Laugh"},
  std::string_view{"Light"},
  std::string_view{"lullaby"},
  std::string_view{"Luminous"},
  std::string_view{"Mirror"},
  std::string_view{"Misty"},
  std::string_view{"Moon"},
  std::string_view{"Mountain"},
  std::string_view{"Music"},
  std::string_view{"Ocean"},
  std::string_view{"Peace"},
  std::string_view{"Petal"},
  std::string_view{"Pillow"},
  std::string_view{"Puddle"},
  std::string_view{"Puzzle"},
  std::string_view{"Quasar"},
  std::string_view{"Quiet"},
  std::string_view{"Radiant"},
  std::string_view{"Rain"},
  std::string_view{"River"},
  std::string_view{"Rocket"},
  std::string_view{"Secret"},
  std::string_view{"Serene"},
  std::string_view{"Shadow"},
  std::string_view{"Silken"},
  std::string_view{"Sincere"},
  std::string_view{"sleep"},
  std::string_view{"Smile"},
  std::string_view{"Solar"},
  std::string_view{"Spark"},
  std::string_view{"Sparkle"},
  std::string_view{"Sphere"},
  std::string_view{"Spiral"},
  std::string_view{"Spring"},
  std::string_view{"Stars"},
  std::string_view{"Summer"},
  std::string_view{"Sun"},
  std::string_view{"Sweet"},
  std::string_view{"Swift"},
  std::string_view{"Swirl"},
  std::string_view{"Symphony"},
  std::string_view{"Tranquil"},
  std::string_view{"Travel"},
  std::string_view{"Twilight"},
  std::string_view{"Velvet"},
  std::string_view{"Warmth"},
  std::string_view{"Whisper"},
  std::string_view{"Whistle"},
  std::string_view{"Window"},
  std::string_view{"Windy"},
  std::string_view{"Winter"},
  std::string_view{"Wisdom"},
  std::string_view{"Zephyr"},
  std::string_view{"keyboard"},
};

// clang-format on
}  // namespace data::inline v_1_0_0
